name: SonarQube analysis

on:
  workflow_call:
    inputs:
      profile:
        description: 'Build profile'
        type: string
        required: true
      semanticVersion:
        description: 'Project semantic version'
        type: string
        required: true
      branch:
        description: 'Git branch'
        type: string
        required: true
      buildArgs:
        description: 'Gradle test arguments'
        required: false
        type: string
        default: 'clean test jacocoTestReport'
      sonarqube:
        description: 'Enable sonarqube step'
        required: false
        type: string
        default: 'true'
      javaDist:
        description: 'Java distribution'
        required: false
        type: string
        default: 'temurin'
      javaVersion:
        description: 'Java version'
        required: false
        type: string
        default: '17'
      runnerOS:
        description: 'Runner OS'
        required: false
        type: string
        default: 'ubuntu-latest'
    secrets:
      githubToken:
        description: 'GitHub Token'
        required: true
      sonarToken:
        description: 'Sonar Token'
        required: true

jobs:
  analysis:
    name: Test & Sonar analysis
    runs-on: ${{ inputs.runnerOS }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.javaDist }}
          java-version: ${{ inputs.javaVersion }}

      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v') }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: ${{ inputs.sonarqube == 'true' }}
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-${{ inputs.javaVersion }}-${{ inputs.javaDist}}-sonar
          restore-keys: ${{ runner.os }}-${{ inputs.javaVersion }}-${{ inputs.javaDist}}-sonar

      - name: Run test
        shell: bash
        run: |
          ./gradlew ${{ inputs.buildArgs }} --stacktrace \
                      -Pprofile=${{ inputs.PROFILE }} \
                      -PsemanticVersion=${{ inputs.semanticVersion }}

      - name: SonarQube
        shell: bash
        if: ${{ inputs.sonarqube == 'true' }}
        run: |
          ./gradlew sonarqube --stacktrace \
              -Pprofile=${{ inputs.PROFILE }} \
              -PsemanticVersion=${{ inputs.semanticVersion }} \
              -Dsonar.branch.name=${{ inputs.branch }} \
              -Dsonar.token=${{ secrets.sonarToken }} \
              -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError"
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
