name: Project Publisher

on:
  workflow_call:
    inputs:
      profile:
        description: 'Build profile'
        type: string
        required: true
      version:
        description: 'Project version'
        type: string
        required: true
      semanticVersion:
        description: 'Project semantic version'
        type: string
        required: true
      hashVersion:
        description: 'Project hash commit'
        type: string
        required: true
      isRelease:
        description: 'Is release'
        type: string
        required: true
      enableGitHub:
        description: 'Enable release to GitHub packages'
        type: string
        required: false
        default: false
      buildArgs:
        description: 'Gradle publish extra arguments'
        type: string
        required: false
        default: ''
      javaDist:
        description: 'Java distribution'
        required: false
        type: string
        default: 'temurin'
      javaVersion:
        description: 'Java version'
        required: false
        type: string
        default: '11'
    secrets:
      ossrhUser:
        description: 'OSSRH User'
        required: true
      ossrhToken:
        description: 'OSSRH Token'
        required: true
      gpgKey:
        description: 'GPG private key'
        required: true
      gpgPassphrase:
        description: 'GPG passphrase'
        required: true

jobs:
  publish-snapshot:
    if: inputs.isRelease != 'true'
    name: Publish to Nexus Snapshot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.javaDist }}
          java-version: ${{ inputs.javaVersion }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v') }}

      - name: Publish
        shell: bash
        run: |
          args=( -Pprofile=${{ inputs.profile }} \
                 -Pversion=${{ inputs.version }} \
                 -PsemanticVersion=${{ inputs.semanticVersion }} \
                 -Pnexus.username=${{ secrets.ossrhUser }} \
                 -Pnexus.password=${{ secrets.ossrhToken }} )
          ./gradlew --stacktrace publishToSonatype "${args[@]}" ${{ inputs.publishArgs }}

  publish-github:
    if: inputs.isRelease == 'true' && inputs.enableGitHub == 'true'
    name: Release to GitHub Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.javaDist }}
          java-version: ${{ inputs.javaVersion }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v') }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.OSS_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.OSS_GPG_PASSPHARSE }}

      - name: Publish GitHub Package
        run: |
          args=( -Pprofile=${{ inputs.profile }} \
                 -Pversion=${{ inputs.version }} \
                 -PsemanticVersion='${{ inputs.semanticVersion }}' \
                 -PbuildHash=${{ inputs.hashVersion }} \
                 -PbuildBy="GitHub-Action" \
                 -Psigning.gnupg.homeDir=/home/runner/.gnupg \
                 -Psigning.gnupg.keyName='${{ steps.import_gpg.outputs.keyid }}' \
                 -Psigning.gnupg.passphrase='${{ secrets.gpgPassphrase }}' \
                 -Pnexus.username='${{ secrets.ossrhUser }}' \
                 -Pnexus.password='${{ secrets.ossrhToken }}' )
          ./gradlew --stacktrace publishToGitHub -Prelease "${args[@]}" ${{ inputs.publishArgs }}

  publish-release:
    if: inputs.isRelease == 'true'
    name: Publish to Nexus Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.javaDist }}
          java-version: ${{ inputs.javaVersion }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v') }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.gpgKey }}
          passphrase: ${{ secrets.gpgPassphrase }}

      - name: Publish
        shell: bash
        run: |
          args=( -Pprofile=${{ inputs.profile }} \
                 -Pversion=${{ inputs.version }} \
                 -PsemanticVersion='${{ inputs.semanticVersion }}' \
                 -PbuildHash=${{ inputs.hashVersion }} \
                 -PbuildBy="GitHub-Action" \
                 -Psigning.gnupg.homeDir=/home/runner/.gnupg \
                 -Psigning.gnupg.keyName='${{ steps.import_gpg.outputs.keyid }}' \
                 -Psigning.gnupg.passphrase='${{ secrets.gpgPassphrase }}' \
                 -Pnexus.username='${{ secrets.ossrhUser }}' \
                 -Pnexus.password='${{ secrets.ossrhToken }}' )
          ./gradlew --stacktrace publishToSonatype closeAndReleaseSonatypeStagingRepository -Prelease "${args[@]}"  ${{ inputs.publishArgs }}
